openapi: 3.0.0
info:
  title: Vulnerable API Challenger
  description: >
    API com vulnerabilidades conhecidas implementadas de forma sutil para dificultar a detecção automática.
    Todas as rotas estão abertas (sem autenticação), permitindo exploração de falhas como IDOR, SQL Injection ofuscado,
    LFI, SSRF e exposição de dados sensíveis.
  version: "1.0.0"
servers:
  - url: https://api-scannerchallenge.onrender.com
    description: Servidor local para testes

paths:
  /auth/login:
    post:
      summary: Gera um token fictício com base no email
      description: >
        Este endpoint gera um token (apenas exemplificativo) utilizando o hash SHA256 do email concatenado com um segredo.
        (Não há autenticação ou validação adicional.)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: "user@example.com"
      responses:
        '200':
          description: Token gerado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "a3c9f2b4d5e6f7g8h9i0j1k2l3m4n5o6"
        '400':
          description: Email obrigatório.

  /users/{id}:
    get:
      summary: Obtém informações do usuário (IDOR disfarçado)
      description: >
        Retorna os dados do usuário com um objeto de metadados adicional.
        A autorização é ausente, permitindo acesso indevido a informações de qualquer usuário.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123"
      responses:
        '200':
          description: Dados do usuário retornados com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    description: Dados do usuário.
                  metadata:
                    type: object
                    properties:
                      request_id:
                        type: string
                      timestamp:
                        type: string
                        format: date-time
        '404':
          description: Usuário não encontrado.

  /products/search:
    get:
      summary: Pesquisa de produtos (SQL Injection ofuscado)
      description: >
        Pesquisa produtos com base no parâmetro 'q'. A sanitização é aplicada de forma parcial, permitindo
        exploração de injeção SQL de maneira não óbvia.
      parameters:
        - name: q
          in: query
          required: false
          schema:
            type: string
            example: "produto"
      responses:
        '200':
          description: Lista de produtos retornada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
        '400':
          description: Erro na consulta.

  /profiles/{id}:
    get:
      summary: Obtém perfil do usuário (BOLA sutil)
      description: >
        Retorna os dados do perfil de um usuário.
        A falta de controles de autorização permite acesso indevido aos perfis.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "456"
      responses:
        '200':
          description: Perfil retornado com sucesso.
          content:
            application/json:
              schema:
                type: object
                properties:
                  profile:
                    type: object
        '403':
          description: Acesso negado.
        '404':
          description: Perfil não encontrado.

  /files/{filename}:
    get:
      summary: Leitura de arquivos (LFI sutil)
      description: >
        Permite a leitura de arquivos cujo nome termina com ".txt". A validação é mínima, não impedindo
        completamente tentativas de inclusão de arquivos locais.
      parameters:
        - name: filename
          in: path
          required: true
          schema:
            type: string
            example: "example.txt"
      responses:
        '200':
          description: Conteúdo do arquivo retornado.
          content:
            text/plain:
              schema:
                type: string
        '403':
          description: Tipo de arquivo inválido.
        '404':
          description: Arquivo não encontrado.

  /users/{id}/sensitive:
    get:
      summary: Exposição de dados sensíveis do usuário
      description: >
        Retorna informações sensíveis do usuário, incluindo dados confidenciais (ex.: senha em texto claro),
        demonstrando a exposição inadequada de dados.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123"
      responses:
        '200':
          description: Dados sensíveis retornados.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                  sensitive:
                    type: object
                    properties:
                      password:
                        type: string
                        example: "plaintextpassword"
        '404':
          description: Usuário não encontrado.

  /admin/dashboard:
    get:
      summary: Painel administrativo (controle de acesso fraco)
      description: >
        Exibe o painel administrativo. Sem autenticação, qualquer acesso é permitido,
        demonstrando uma falha de controle de acesso.
      responses:
        '200':
          description: Acesso concedido ao painel administrativo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Bem-vindo ao painel administrativo"
        '403':
          description: Acesso negado.

  /fetch:
    get:
      summary: SSRF sutil – Busca conteúdo de uma URL remota
      description: >
        Realiza uma requisição HTTP ou HTTPS para a URL fornecida via parâmetro e retorna seu conteúdo.
        A falta de validação adequada da URL possibilita ataques SSRF.
      parameters:
        - name: url
          in: query
          required: true
          schema:
            type: string
            example: "http://example.com"
      responses:
        '200':
          description: Conteúdo da URL retornado com sucesso.
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: URL obrigatória.
        '500':
          description: Erro ao buscar a URL.

components: {}
